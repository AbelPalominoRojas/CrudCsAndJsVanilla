using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.Mvc; using apr.Business; using apr.Entities; using apr.WebMVC.Models;  namespace apr.WebMVC.Controllers {     public class CategoriaController : Controller     {         // GET: Categoria         public ActionResult Index()         {             return View();         }           public JsonResult findAll()         {             ResponseResult<Categoria> responseResult = new ResponseResult<Categoria>();              try             {                 responseResult.Items = new CategoriasBll().findAll();             }             catch (Exception ex)             {                 responseResult.Message = ex.Message;             }               return Json(responseResult, JsonRequestBehavior.AllowGet);         }          [HttpPost]         public JsonResult create(Categoria categoria)         {             ResponseResult<Categoria> responseResult = new ResponseResult<Categoria>();              try             {                 responseResult.State = new CategoriasBll().create(categoria);                  if (responseResult.State)                 {                     responseResult.Message = "Categoria Registrado correctamete" ;                 }                 else                     responseResult.Message = "El Registro de Categoria no Fue posible";             }             catch (Exception ex)             {                 responseResult.Message = ex.Message;             }               return Json(responseResult, JsonRequestBehavior.AllowGet);         }          public JsonResult find(Int32 idcategoria)         {             ResponseResult<Categoria> responseResult = new ResponseResult<Categoria>();             try             {                 responseResult.Item = new CategoriasBll().find(idcategoria);             }             catch (Exception ex)             {                 responseResult.Message = ex.Message;             }              return Json(responseResult, JsonRequestBehavior.AllowGet);         }          [HttpPost]         public JsonResult edit(Categoria categoria)         {             ResponseResult<Categoria> responseResult = new ResponseResult<Categoria>();              try             {                 responseResult.State = new CategoriasBll().edit(categoria);                  if (responseResult.State)                     responseResult.Message = "Categoria Actualizado correctamete";                 else                     responseResult.Message = "La Actualización de Categoria no Fue posible";             }             catch (Exception ex)             {                 responseResult.Message = ex.Message;                 // throw;             }              return Json(responseResult, JsonRequestBehavior.AllowGet);         }          [HttpPost]         public JsonResult remove(Int32 idcategoria)         {             ResponseResult<Categoria> responseResult = new ResponseResult<Categoria>();              try             {                 responseResult.State = new CategoriasBll().remove(idcategoria);                  if (responseResult.State)                     responseResult.Message = "Categoria Eliminado correctamete";                 else                     responseResult.Message = "La Eliminacion de Categoria no Fue posible";             }             catch (Exception ex)             {                 responseResult.Message = ex.Message;             }              return Json(responseResult, JsonRequestBehavior.AllowGet);         }      } }